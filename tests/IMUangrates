import board
import busio
import struct

# Adjustable parameters
SAMPLE_SIZE = 8  # Adjust as needed
GYRO_SCALE = 0.00015  # Change this to tune the scale

# Initialize UART (using default TX/RX pins)
uart = busio.UART(board.TX, board.RX, baudrate=1000000, timeout=0.01)

print("ðŸš€ IMU Angular Rate Streaming Initialized")
print("AngularRateX,AngularRateY,AngularRateZ")  # CSV Header

def process_imu_message(message):
    """Processes IMU message to extract and adjust Angular Rate"""
    if len(message) < 8:  # Ensure at least 8 bytes are received
        return
    
    if message[0] == 0x5E:  # Validate message header
        # Extract angular rates and apply the adjustable scale
        angular_rate_x = struct.unpack(">h", message[2:4])[0] * GYRO_SCALE
        angular_rate_y = struct.unpack(">h", message[4:6])[0] * GYRO_SCALE
        angular_rate_z = struct.unpack(">h", message[6:8])[0] * GYRO_SCALE

        # Print in CSV format (no timestamp)
        print("{:.4f},{:.4f},{:.4f}".format(
            angular_rate_x, angular_rate_y, angular_rate_z
        ))

while True:
    data = uart.read(SAMPLE_SIZE)  # Read up to SAMPLE_SIZE bytes
    if data:
        process_imu_message(data)
