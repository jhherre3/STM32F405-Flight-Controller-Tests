import time
import board
import busio
import math

# Magnetometer I2C Address
MAG_ADDRESS = 0x0D  
REG_CTRL1 = 0x09  
REG_DATA = 0x00  

# Initialize I2C
i2c = busio.I2C(board.SCL, board.SDA)

def write_register(register, value):
    i2c.writeto(MAG_ADDRESS, bytes([register, value]))

def read_register(register, length):
    result = bytearray(length)
    i2c.writeto_then_readfrom(MAG_ADDRESS, bytes([register]), result)
    return result

try:
    while not i2c.try_lock():
        pass  

    write_register(REG_CTRL1, 0b00011101)  
    print("QMC5883L Magnetometer Initialized")

    # Apply computed offsets
    x_offset = 2345.5  # Replace with your computed offset
    y_offset = 2087  # Replace with your computed offset

    while True:
        data = read_register(REG_DATA, 6)

        x = (data[1] << 8) | data[0]
        y = (data[3] << 8) | data[2]

        if x > 32767: x -= 65536
        if y > 32767: y -= 65536

        # Apply offsets
        x -= x_offset
        y -= y_offset

        # Compute heading
        heading_rad = math.atan2(y, x)  
        heading_deg = math.degrees(heading_rad)
        if heading_deg < 0:
            heading_deg += 360  

        print(f"Calibrated Heading: {heading_deg:.2f}Â°")

        time.sleep(0.5)  

except Exception as e:
    print(f"Error: {e}")

finally:
    i2c.unlock()
